---
title: "Assigment 1. Statistical Theory and Modeling"
format: html
authors: "Caroline Birkehammar, Pablo Paras Ochoa, Steven Hiram Rubio Vasquez"
editor: visual
---

## Assignment 1

Import of the libraries and data...

```{r,warning=FALSE,message=FALSE}
#| echo: false

library(pacman)
p_load(readxl, tidyverse, ggplot2, janitor, e1071, scales, ggridges)

Sys.setlocale("LC_ALL", "es_ES.UTF-8") 
options(scipen=999) 

set.seed(42)

data = read.csv("https://github.com/StatisticsSU/STM/raw/main/assignment/bugs.csv", header = TRUE) 


```

## Part 1

1A:

```{r, warning=FALSE,message=FALSE}

dist <- rexp(10000, 1/2)

mean(dist)


```

1B:

```{r, warning=FALSE,message=FALSE}

dist <- tibble(rexp(200, 1/2)) %>% rename(X = 1)

dist_theo <- tibble(c(seq(from = 0, to = 20, by = .01)), dexp(c(seq(from = 0, to = 20, by = .01)), rate = 1/2)) %>% rename(X = 1, Y = 2)

ggplot() +
  geom_histogram(aes(dist$X, after_stat(density)), bins = 30, fill = "steelblue", color = "black") +
  geom_line(aes(dist_theo$X, dist_theo$Y)) +
  theme_minimal() +
  labs(title = "Histogram of the distribution",
       subtitle = "Comparing theoretical distribution with randomly generated data") +
  xlab("Count of X") +
  ylab("X") 


```

1C:

```{r, warning=FALSE,message=FALSE}

theo_data <- c(seq(from = 0, to = 20, by = .01))

dist_theo1 <- tibble(theo_data, dexp(theo_data, rate = 1/1)) %>% rename(X = 1, Y = 2) 

dist_theo2 <- tibble(theo_data, dexp(theo_data, rate = 1/2)) %>% rename(X = 1, Y = 2) 

dist_theo3 <- tibble(theo_data, dexp(theo_data, rate = 1/3)) %>% rename(X = 1, Y = 2) 


ggplot() +
  geom_histogram(aes(dist$X, after_stat(density)), bins = 30, fill = "steelblue", color = "black") +
  geom_line(aes(dist_theo1$X, dist_theo1$Y), color = "#FF9E0D", linetype = "dotdash") +
  geom_line(aes(dist_theo2$X, dist_theo2$Y), color = "#1BE2DC") +
  geom_line(aes(dist_theo3$X, dist_theo3$Y), color = "#09E920", linetype = "dotdash") +
  theme_minimal() +
  labs(title = "Histogram of the distribution",
       subtitle = "Comparing theoretical distribution with randomly generated data") +
  xlab("Count of X") +
  ylab("X") 


```

1D:

```{r, warning=FALSE,message=FALSE}

dist_theo1 <- tibble(rexp(10000, 1/1)) %>% rename(X = 1)

dist_theo2 <- tibble(rexp(10000, 1/2)) %>% rename(X = 1)

dist_theo3 <- tibble(rexp(10000, 1/3)) %>% rename(X = 1)

ggplot() +
  stat_ecdf(aes(dist$X), color = "black") +
  stat_ecdf(aes(dist_theo1$X), color = "#FF9E0D") +
  stat_ecdf(aes(dist_theo2$X), color = "#1BE2DC") +
  stat_ecdf(aes(dist_theo3$X), color = "#09E920") +
  theme_minimal() +
  labs(title = "Cumulative distribution",
       subtitle = "Comparing theoretical cumulative distribution with randomly generated data") +
  xlab("Count of X") +
  ylab("X") 


```

## Part 2

a\) After reading the bugs data and calculating lambda we try to fit an EXP distribution:

```{r}
y = data$nBugs # number of bugs, a vector with n = 91 observations
lambda=mean(y)

ggplot() + 
  geom_histogram(aes(data$nBugs,after_stat(density)),bins = 20,color="black",alpha=0.4, fill="#dde542")+
  geom_function(fun = function(x) lambda^x*exp(-lambda)/factorial(x))+
  theme_minimal() +
  labs(title = "Data and poisson distribution",
       subtitle = "Comparing the distribution of number of bugs and the poisson distribution") +
  xlab("Count of y") +
  ylab("Pr(y<Y)")
```

The data does NOT follow a Poisson distribution.

b\) We generate the data and added on top of the previous one

```{r}
df <- data.frame(VNeg1=rnbinom(500,mu = lambda,size=1),
                 VNeg2=rnbinom(500,mu = lambda,size=3),
                 VNeg3=rnbinom(500,mu = lambda,size=100),
                 Pois=rpois(500,lambda = lambda))
colors <- c("Poisson" = "#fc1b00","BNr1" = "#FF9E0D", "BNr3" = "#1BE2DC", "BNr100"="#09E920")

ggplot() + 
  geom_density(aes(df$Pois, color = "Poisson"), linewidth = 1.0 )+ 
  geom_density(aes(df$VNeg1, color = "BNr1"), linewidth = 1.0 ) +
  geom_density(aes(df$VNeg2, color = "BNr3"), linewidth = 1.0) +
  geom_density(aes(df$VNeg3, color = "BNr100"), linewidth = 1.0) +
  geom_histogram(aes(data$nBugs,after_stat(density)),bins = 20,color="black",alpha=0.4, fill="#dde542")+
  theme_minimal() +
  labs(title = "Data, poisson and negative binomial distributions",
       subtitle = "Comparing the distribution of number of bugs and 4 theoretical curves",
       color = "Legend") +
  xlab("Count of y") +
  ylab("Pr(y<Y)")+scale_color_manual(values = colors,labels = c("BNr1"="NB r=1","BNr100"="NB r=100", "BNr3"="NB r=3","Poisson"="Poisson" ))

```

The curve that follows the distribution of the data better is the blue line (r=3), and the curve that's more similar to the poisson model is the green line (r=100) because bigger r's approximates to it?

## Part 3

## Example Code

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
